#!/usr/bin/env node

var app = require('../app');
var debug = require('debug')('servernode:server');
var http = require('http');
var timers = require('timers');
var nodes = require('../nodes');

console.log("Pushing config to all nodes...");
var node = new nodes.SensorNode('213.159.191.84', 5002);
node.ping(function(status) {
	console.log("Pinged node", status);
});

timers.setInterval(function() {
	console.log("foo");
}, 60000);

var server = http.createServer(app);
server.listen(3000);
server.on('error', onError);
server.on('listening', onListening);

function onError(error) {
	if (error.syscall !== 'listen') {
		throw error;
	}

	var bind = typeof port === 'string'
		? 'Pipe ' + port
		: 'Port ' + port;

	// handle specific listen errors with friendly messages
	switch (error.code) {
		case 'EACCES':
			console.error(bind + ' requires elevated privileges');
			process.exit(1);
			break;
		case 'EADDRINUSE':
			console.error(bind + ' is already in use');
			process.exit(1);
			break;
		default:
			throw error;
	}
}
function onListening() {
	var addr = server.address();
	var bind = typeof addr === 'string'
		? 'pipe ' + addr
		: 'port ' + addr.port;
	debug('Listening on ' + bind);
}
